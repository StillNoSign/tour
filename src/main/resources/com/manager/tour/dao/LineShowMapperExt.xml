<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manager.tour.dao.LineShowMapper">
  <insert id="insertAll" parameterType="List">
    insert into SC020103 (SC020103_ID, LINE_SOURCE, LINE_NUM,
      LINE_NAME, LINE_START_LONG, LINE_START_LAT,
      LINE_END_LONG, LINE_END_LAT, STATUS,
      CREATE_USER, CREATE_TIME, UPDATE_USER,
      UPDATE_TIME, DELETE_FLAG)
    values
    <foreach collection="lineShows" separator="," item="item">
      (#{item.sc020103Id,jdbcType=VARCHAR}, #{item.lineSource,jdbcType=VARCHAR}, #{item.lineNum,jdbcType=VARCHAR},
      #{item.lineName,jdbcType=VARCHAR}, #{item.lineStartLong,jdbcType=VARCHAR}, #{item.lineStartLat,jdbcType=VARCHAR},
      #{item.lineEndLong,jdbcType=VARCHAR}, #{item.lineEndLat,jdbcType=VARCHAR}, #{item.status,jdbcType=CHAR},
      #{item.createUser,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=VARCHAR},
      #{item.updateTime,jdbcType=TIMESTAMP}, #{item.deleteFlag,jdbcType=CHAR})
    </foreach>

  </insert>

  <update id="deleteNotIn">
    update SC020103 set STATUS = 0, DELETE_FLAG = '1', UPDATE_TIME = now(), UPDATE_USER = #{ss01Id,jdbcType=VARCHAR}
    where SC020103_ID not in

  </update>

  <update id="deleteAll">
    update SC020103 set STATUS = 0, DELETE_FLAG = '1', UPDATE_TIME = now(), UPDATE_USER = #{ss01Id,jdbcType=VARCHAR}
    where LINE_SOURCE = #{sc0201Id,jdbcType=VARCHAR}
    <if test="ids != null and ids.size > 0">
      and SC020103_ID not in
      <foreach collection="ids" item="id" separator="," open="(" close=")">
        #{id,jdbcType=VARCHAR}
      </foreach>
    </if>

  </update>

  <update id="deleteAllByContent">
    update SC020103 set STATUS = 0, DELETE_FLAG = '1', UPDATE_TIME = now(), UPDATE_USER = #{ss01Id,jdbcType=VARCHAR}
    where LINE_SOURCE in
    <foreach collection="ids" item="id" separator="," open="(" close=")">
      #{id,jdbcType=VARCHAR}
    </foreach>
  </update>
</mapper>
